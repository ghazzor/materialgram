name: Linux.

on:
  push:
    tags:
      - '*'
  workflow_dispatch:
    paths-ignore:
      - 'docs/**'
      - '**.md'
      - 'changelog.txt'
      - 'LEGAL'
      - 'LICENSE'
      - '.github/**'
      - '!.github/workflows/linux.yml'
      - 'snap/**'
      - 'Telegram/build/**'
      - 'Telegram/Resources/uwp/**'
      - 'Telegram/Resources/winrc/**'
      - 'Telegram/SourceFiles/platform/win/**'
      - 'Telegram/SourceFiles/platform/mac/**'
      - 'Telegram/Telegram/**'
      - 'Telegram/configure.bat'
      - 'Telegram/Telegram.plist'

jobs:

  linux:
    name: Rocky Linux 8
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        defines:
          - ""

    env:
      UPLOAD_ARTIFACT: "true"

    steps:
      - name: Get repository name.
        run: echo "REPO_NAME=${GITHUB_REPOSITORY##*/}" >> $GITHUB_ENV

      - name: Cleanup
        uses: rokibhasansagar/slimhub_actions@main

      - name: Clone.
        uses: actions/checkout@v4
        with:
          submodules: recursive
          path: ${{ env.REPO_NAME }}

      - name: First set up.
        run: |
          echo ${{ secrets.PASS }} | docker login --username ghazzor --password-stdin
          docker pull ghcr.io/telegramdesktop/tdesktop/centos_env
          docker tag ghcr.io/telegramdesktop/tdesktop/centos_env tdesktop:centos_env

      - name: materialgram build.
        run: |
          cd $REPO_NAME

          DEFINE=""
          if [ -n "${{ matrix.defines }}" ]; then
            DEFINE="-D ${{ matrix.defines }}=ON"
            echo Define from matrix: $DEFINE
            echo "ARTIFACT_NAME=materialgram_${{ matrix.defines }}" >> $GITHUB_ENV
          else
            echo "ARTIFACT_NAME=materialgram" >> $GITHUB_ENV
          fi

          docker run --rm \
          -v $PWD:/usr/src/tdesktop \
          -e DEBUG=1 \
          tdesktop:centos_env \
          /usr/src/tdesktop/Telegram/build/docker/centos_env/build.sh \
          -D CMAKE_EXE_LINKER_FLAGS="-s" \
          -D TDESKTOP_API_ID=27089606 \
          -D TDESKTOP_API_HASH=d14ed11b1ec58dfe89233e976834ea73 \
          -D DESKTOP_APP_DISABLE_AUTOUPDATE=True \
          $DEFINE
          
      - name: Check.
        run: |
          filePath="$REPO_NAME/out/Release/materialgram"
          if test -f "$filePath"; then
            echo "Build successfully done! :)"

            size=$(stat -c %s "$filePath")
            echo "File size of ${filePath}: ${size} Bytes."
          else
            echo "Build error, output file does not exist."
            exit 1
          fi

      - name: Move artifact.
        if: env.UPLOAD_ARTIFACT == 'true'
        run: |
          cd $REPO_NAME/out/Release
          mkdir artifact
          mv materialgram artifact/
      - uses: actions/upload-artifact@master
        if: env.UPLOAD_ARTIFACT == 'true'
        name: Upload artifact.
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ${{ env.REPO_NAME }}/out/Release/artifact/
