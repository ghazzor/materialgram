name: Linux

on:
  workflow_dispatch:
  push:

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: ghazzor/ubuntu-tg:latest-deb

    steps:
      - name: Update System
        run: apt update && apt upgrade -y

      - name: Set Tag Name
        run: echo "TAGNAME=$(echo ${{ github.ref }} | cut -d '/' -f3)" >> $GITHUB_ENV 

      - name: Build materialgram
        run: |
          [ -d "/home/builder" ] && cd /home/builder || { mkdir -p /home/builder && cd /home/builder; }
          update-alternatives --install /usr/bin/clang clang /usr/bin/clang-18 60
          update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-18 60
          cp -r /usr/local/lin/librnnoise.* /usr/lib/
          wget https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage
          chmod +x linuxdeployqt-continuous-x86_64.AppImage
          sudo mv linuxdeployqt-continuous-x86_64.AppImage /usr/local/bin/linuxdeployqt
          apt install fuse
          modinfo fuse
          modprobe fuse
          git clone https://github.com/kukuruzka165/materialgram --recursive -b v5.1.5.1 && cd materialgram
          git clone https://chromium.googlesource.com/libyuv/libyuv Telegram/ThirdParty/tgcalls/tgcalls/third-party/libyuv
          git clone https://chromium.googlesource.com/libyuv/libyuv Telegram/ThirdParty/libyuv
          git clone https://chromium.googlesource.com/libyuv/libyuv Telegram/ThirdParty/tgcalls/tgcalls/third_party/libyuv
          git clone https://chromium.googlesource.com/libyuv/libyuv Telegram/ThirdParty/tgcalls/tgcalls/desktop_capturer/third_party/libyuv
          cmake \
           -B build \
           -G Ninja \
           -DCMAKE_INSTALL_PREFIX="/usr" \
           -DCMAKE_BUILD_TYPE=Release \
           -DTDESKTOP_API_ID=27089606 \
           -DTDESKTOP_API_HASH=d14ed11b1ec58dfe89233e976834ea73 \
           -DCMAKE_CXX_FLAGS="-Wno-deprecated-declarations" \
           -DDESKTOP_APP_DISABLE_AUTOUPDATE=True
          ninja -C build -j$(nproc --all) 
          mkdir fakeroot && DESTDIR=$(pwd)/fakeroot ninja -C build install && cd fakeroot
          cp usr/share/applications/io.github.kukuruzka165.materialgram.desktop io.github.kukuruzka165.materialgram.desktop 
          linuxdeployqt usr/share/applications/io.github.kukuruzka165.materialgram.desktop -appimage
          ls

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: materialgram-${{ env.TAGNAME }}
          path: /home/builder/materialgram/fakeroot/
